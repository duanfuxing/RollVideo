# .github/workflows/roll-video-build.yml

name: RollVideo Build and Push

on:
  push:
    paths:
      - '.github/workflows/roll-video-build.yml'
      - 'app/services/roll_video/Dockerfile'

jobs:
  build-ffmpeg:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Free space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          df -h

      - name: Build FFmpeg in Docker
        run: |
          docker build -f Dockerfile.build-ffmpeg -t ffmpeg-builder .
          docker create --name temp-ffmpeg ffmpeg-builder
          mkdir -p ffmpeg-bin
          docker cp temp-ffmpeg:/ffmpeg-out/. ffmpeg-bin/
          docker rm temp-ffmpeg

      - name: Upload FFmpeg binaries
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-bin
          path: ffmpeg-bin/

  build-and-push:
    needs: build-ffmpeg
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download FFmpeg binaries
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-bin
          path: app/services/roll_video/ffmpeg-bin

      - name: Free space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: DockerHub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Final Image
        uses: docker/build-push-action@v4
        with:
          context: app/services/roll_video
          file: app/services/roll_video/Dockerfile
          push: true
          tags: |
            catchoco/roll-video:supervisor
