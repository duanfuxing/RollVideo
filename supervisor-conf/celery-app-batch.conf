[program:celery-app-batch]
# 使用绝对路径启动 celery
# --concurrency 限制 Celery 仅启动 1 个 worker 进程
# --prefetch-multiplier 保证 worker 一次只获取 1 个任务
# --max-tasks-per-child worker 进程每执行 10 个任务后就自动退出并重启 避免内存泄露
# command=/usr/local/bin/celery -A app.celery_app worker --loglevel=info --concurrency=1 --prefetch-multiplier=1 --max-tasks-per-child=10
# command=/usr/local/bin/celery -A app.celery_app worker --loglevel=info --concurrency=2 --queues=person,batch --prefetch-multiplier=2 --max-tasks-per-child=50
# 单独为 worker 设置并发和重启配置
command=/usr/local/bin/celery -A app.celery_app worker --loglevel=info --concurrency=1 --queues=batch --prefetch-multiplier=2 --max-tasks-per-child=50

# 工作目录
directory=/opt/MediaSymphony

# 环境变量
environment=PYTHONPATH="/opt/MediaSymphony",PATH="/usr/local/bin:%(ENV_PATH)s"

# 用户
user=root

# 进程配置
numprocs=1
process_name=%(program_name)s_%(process_num)02d

# 启动配置
autostart=true
autorestart=true
startsecs=10              # 增加启动等待时间
startretries=5            # 增加重试次数
stopwaitsecs=10          # 增加停止等待时间

# 错误处理
stopasgroup=true         # 停止所有子进程
killasgroup=true         # 杀死所有子进程

# 日志配置
redirect_stderr=true
stderr_logfile=/var/log/supervisor/celery-app-batch.error.log
stdout_logfile=/var/log/supervisor/celery-app-batch.out.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10

# 优雅退出
stopsignal=QUIT
